<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dci</groupId>
    <artifactId>poc-origin-pingpong-config</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>sample-config</name>
    <description>Sample Config Server</description>

    <parent>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-parent</artifactId>
        <version>Angel.SR2</version>
        <relativePath/>
    </parent>

    <prerequisites>
        <maven>3.3.1</maven>
    </prerequisites>

    <properties>
        <docker.image.prefix>tfritz</docker.image.prefix>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.compiler.plugin>2.3.1</version.compiler.plugin>
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.surefire.plugin.version>2.17</maven.surefire.plugin.version>

        <!-- Plugin versions -->
        <plugin.docker-maven-plugin.version>0.3.3</plugin.docker-maven-plugin.version>
        <fabric8.version>2.2.22</fabric8.version>
        <!-- Fabric8 specific params.
        <fabric8.dockerPrefix>docker.io/</fabric8.dockerPrefix>
        <fabric8.dockerUser>fabric8/</fabric8.dockerUser>
        <docker.image>${fabric8.dockerPrefix}${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
        <docker.assemblyDescriptorRef>artifact</docker.assemblyDescriptorRef>
        <docker.env.JAR>${project.artifactId}-${project.version}.jar</docker.env.JAR>
        <docker.port.container.jolokia>8888</docker.port.container.jolokia>
        <docker.port.container.http>8080</docker.port.container.http>

        <fabric8.service.name>sample-configt</fabric8.service.name>
        <fabric8.service.port>9101</fabric8.service.port>
        <fabric8.service.containerPort>8888</fabric8.service.containerPort>
        <fabric8.label.component>${project.artifactId}</fabric8.label.component>
        <fabric8.label.container>spring-boot</fabric8.label.container>
        <fabric8.iconRef>spring-boot</fabric8.iconRef> -->
    </properties>

    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <!-- With windows, no usey same path separator as 'nix systems. -->
                <docker.resource.targetPath></docker.resource.targetPath>
            </properties>
        </profile>
        <profile>
            <id>mac-osx</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <docker.resource.targetPath>/</docker.resource.targetPath>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <!-- Import dependency management from Spring Boot -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>${spring-boot.version}</version>
            <type>pom</type>
            <!-- This scope should be defined in a dependency management paragraph. -->
            <scope>import</scope>
        </dependency>

        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-project</artifactId>
            <version>${fabric8.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler plugin enforces Java 1.7 compatibility and activates annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- Not using
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                    <excludes>
                        <exclude>${integrationTestPattern}</exclude>
                    </excludes>
                </configuration>
            </plugin> -->

            <!-- <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>json</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>json</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> -->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${plugin.docker-maven-plugin.version}</version>
                <configuration>
                    <imageName>tfritz/${project.artifactId}:${project.version}</imageName>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <skipDockerBuild>false</skipDockerBuild>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <serverId>docker-hub</serverId>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
